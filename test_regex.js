// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
const testTexts = [
    "–ê–∫—Ç–∏–≤–Ω–æ –∏—â—É —Ä–∞–±–æ—Ç—É, –≥–æ—Ç–æ–≤ –≤—ã–π—Ç–∏ –∑–∞–≤—Ç—Ä–∞",
    "–∏—â—É —Ä–∞–±–æ—Ç—É –≤ IT —Å—Ñ–µ—Ä–µ", 
    "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ, –∞–∫—Ç–∏–≤–µ–Ω",
    "–º–æ–≥—É –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∑–∞–≤—Ç—Ä–∞ –∫ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—è–º",
    "–ê–∫—Ç–∏–≤–Ω–æ –∏—â–µ—Ç —Ä–∞–±–æ—Ç—É –≤ –æ–±–ª–∞—Å—Ç–∏",
    "–≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞—Ç—å",
    "–∏—â–µ—Ç —Ä–∞–±–æ—Ç—É –∞–∫—Ç–∏–≤–Ω–æ",
    "–≥–æ—Ç–æ–≤ –≤—ã–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ",
    "–ê–∫—Ç–∏–≤–Ω–æ –∏—â—É —Ä–∞–±–æ—Ç—É, —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
    "–≥–æ—Ç–æ–≤ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å —Å—Ä–∞–∑—É",
    "–Ω–∞—á–Ω—É —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–≤—Ç—Ä–∞"
];

// –¢–µ–∫—É—â–∏–µ —Ä–µ–≥—É–ª—è—Ä–∫–∏
const jobSearchRegex = /(–∞–∫—Ç–∏–≤–Ω–æ\s+–∏—â[—É—ã]\s+—Ä–∞–±–æ—Ç—É|–∏—â[—É—ã]\s+—Ä–∞–±–æ—Ç—É|–∞–∫—Ç–∏–≤–µ–Ω|–≥–æ—Ç–æ–≤\s+–∫\s+—Ä–∞–±–æ—Ç–µ)/i;
const readyToStartRegex = /(–≥–æ—Ç–æ–≤\s+–≤—ã–π—Ç–∏\s+(?:–∑–∞–≤—Ç—Ä–∞|—Å–µ–≥–æ–¥–Ω—è|–Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ|—Å—Ä–∞–∑—É)|–≥–æ—Ç–æ–≤\s+(?:–∑–∞–≤—Ç—Ä–∞|—Å–µ–≥–æ–¥–Ω—è|—Å—Ä–∞–∑—É)|–º–æ–≥—É\s+–ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å\s+(?:–∑–∞–≤—Ç—Ä–∞|—Å–µ–≥–æ–¥–Ω—è|—Å—Ä–∞–∑—É)|–Ω–∞—á–Ω[—É—ã]\s+(?:–∑–∞–≤—Ç—Ä–∞|—Å–µ–≥–æ–¥–Ω—è|—Å—Ä–∞–∑—É))/i;

console.log("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π ===");

testTexts.forEach((text, i) => {
    console.log(`\n${i+1}. "${text}"`);
    
    const jobMatch = text.match(jobSearchRegex);
    const readyMatch = text.match(readyToStartRegex);
    
    if (jobMatch) {
        console.log(`   üîç –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã: "${jobMatch[0]}"`);
    }
    
    if (readyMatch) {
        console.log(`   ‚è±Ô∏è –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: "${readyMatch[0]}"`);
    }
    
    if (!jobMatch && !readyMatch) {
        console.log(`   ‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
    }
});

// –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Ä–µ–≥—É–ª—è—Ä–∫–∏
console.log("\n\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö —Ä–µ–≥—É–ª—è—Ä–æ–∫ ===");

const improvedJobSearchRegex = /(–∞–∫—Ç–∏–≤–Ω–æ\s+–∏—â[–∞—É–µ—ã—É]|–∏—â[–∞—É–µ—ã—É]\s+—Ä–∞–±–æ—Ç—É|–∞–∫—Ç–∏–≤–µ–Ω|–≥–æ—Ç–æ–≤\s+–∫\s+—Ä–∞–±–æ—Ç–µ|—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é\s+–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)/i;
const improvedReadyRegex = /(–≥–æ—Ç–æ–≤\s+(?:–≤—ã–π—Ç–∏|–ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å|–Ω–∞—á–∞—Ç—å)?\s*(?:–∑–∞–≤—Ç—Ä–∞|—Å–µ–≥–æ–¥–Ω—è|–Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ|—Å—Ä–∞–∑—É)|–º–æ–≥—É\s+–ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å|–Ω–∞—á–Ω[—É—ã]|–≥–æ—Ç–æ–≤\s+(?:–∑–∞–≤—Ç—Ä–∞|—Å–µ–≥–æ–¥–Ω—è|—Å—Ä–∞–∑—É))/i;

testTexts.forEach((text, i) => {
    console.log(`\n${i+1}. "${text}"`);
    
    const jobMatch = text.match(improvedJobSearchRegex);
    const readyMatch = text.match(improvedReadyRegex);
    
    if (jobMatch) {
        console.log(`   üîç –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã: "${jobMatch[0]}"`);
    }
    
    if (readyMatch) {
        console.log(`   ‚è±Ô∏è –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: "${readyMatch[0]}"`);
    }
    
    if (!jobMatch && !readyMatch) {
        console.log(`   ‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
    }
});